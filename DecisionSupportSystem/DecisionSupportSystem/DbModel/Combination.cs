//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System.ComponentModel;

namespace DecisionSupportSystem.DbModel
{
    using System;
    using System.Collections.Generic;

    public partial class Combination : BasePropertyChanged, IDataErrorInfo
    {
        public Combination()
        {
            this.CombinParams = new HashSet<CombinParam>();
        }
    
        public Int64 Id { get; set; }
        public Int64? ActionId { get; set; }
        public Int64? EventId { get; set; }
        public Int64? TaskId { get; set; }
        private double? _cp;
        public double? Cp
        {
            get { return _cp; }
            set
            {
                if (value != this._cp)
                {
                    this._cp = value;
                    RaisePropertyChanged("Cp");
                }
            }
        }
        public double? Wp { get; set; }
        public double? Col { get; set; }
        public double? Wol { get; set; }
        public Guid SavingId { get; set; }
        
        public virtual Action Action { get; set; }
        public virtual Event Event { get; set; }
        public virtual Task Task { get; set; }
        public virtual ICollection<CombinParam> CombinParams { get; set; }

        public string this[string columnName]
        {
            get
            {
                string errormsg = null;
                switch (columnName)
                {
                    case "Cp":
                        if (string.IsNullOrEmpty(Cp.ToString()))
                            errormsg = "Введите условную прибыль";
                        break;
                }
                return errormsg;
            }
        }

        public string Error { get { throw new NotImplementedException(); } }
    }
}
